install.packages("randomforest")
install.packages("randomForest")
library(randomForest)
View(airquality)
ss <-  complete.cases(airquality)
ss
View(cars)
View(car)
airqua <- airquality[,c(1,2,3,4)]
View(airqua)
airqua$Wind = as.factor(airqua$Wind)
data size <- floor(nrow(airqua)*.80 )
datsize <- floor(nrow(airqua)*.80 )
trainb <- sample(1:nrow(airqua),size = datsize)
airqua <- airquality[,c(1,2,3,4)]
> View(airqua)
> airqua$Wind = as.factor(airqua$Wind)
> data size <- floor(nrow(airqua)*.80 )
> datsize <- floor(nrow(airqua)*.80 )
> trainb <- sample(1:nrow(airqua),size = datsize)
trainn <- airqua[trainb]
testtt <- airqua[-trainb]
ranfore <- randomForest(Wind ~ .,data = trainn, mtry = 3, ntree = 151, importance = TRUE
)
library(randomForest
)
ranfore <- randomForest(Wind ~ .,data = trainn, mtry = 3, ntree = 151, importance = TRUE
)
ranfore <- randomForest(Wind ~ .,data = trainn, mtry = 3, ntree = 151, importance = TRUE)
trainn <- airqua[trainb]
testtt <- airqua[-trainb]
trainn <- airqua[trainb]
trainb
datsize
trainb <- sample(1:nrow(airqua),.8*nrow(airqua))
trainb
trainn <- airqua[trainb]
airqua
trainb <- sample(1:nrow(airqua),.80*nrow(airqua))
trainb
trainb <- sample(1:nrow(airqua),0.80*nrow(airqua))
trainb
trainn <- airqua[trainb]
set.seed(9850)
trainn <- airqua[trainb]
head(airqua)
> airqua <- airqua[complete.cases(airqua),]
airqua <- airqua[complete.cases(airqua),]
airqua <- airqua[complete.cases(airqua),]
airqua$Wind = as.factor(airqua$Wind)
trainb <- sample(1:nrow(airqua),0.80*nrow(airqua))
trainn <- airqua[trainb]
airqua
str(airqua)
trainn <- airqua[trainb,]
testtt <- airqua[-trainb,]
ranfore <- randomForest(Wind ~ .,data = trainn, mtry = 3, ntree = 151, importance = TRUE)
ranfore <- randomForest(Wind~ .,data = trainn, mtry = 4, ntree = 89, importance = TRUE)
ranfore <- randomForest(Wind~ .,data = trainn, range = 4, ntree = 89, importance = TRUE)
ranfore <- randomForest(Wind~ ., data = trainn, mtry = 4, ntree = 89, importance = TRUE)
ranfore <- randomForest(Wind ~ ., data = trainn, mtry = 4, ntree = 89, importance = TRUE)
ranfore <- randomForest(Wind ~ ., data = trainn, mtry = 3, ntree = 151, importance = TRUE)
ranfore <- randomForest(Wind ~ ., data = trainn, mtry = 3, ntree = 154, importance = TRUE)
ranfore <- randomForest(Wind ~ ., data = trainn, mtry = 3, ntree = 200, importance = TRUE)
trainn
ranfore <- randomForest(Wind ~ ., data = trainn, mtry = 3, ntree = 200, importance = TRUE)
ranfore <- randomForest(Wind ~., data = trainn, mtry = 3, ntree = 200, importance = TRUE)
ranfore <- randomForest(Wind ~. , data = trainn, mtry = 3, ntree = 200, importance = TRUE)
ranfore <- randomForest(Wind~. , data = trainn, mtry = 3, ntree = 200, importance = TRUE)
ranfore <- randomForest(Wind ~ Solar.R+Ozone+Temp , data = trainn, mtry = 3, ntree = 200, importance = TRUE)
ranfore <- randomForest(Wind ~., data = trainn, mtry = 3, ntree = 200, importance = TRUE)
airqua$Wind = as.factor(airqua$Temp)
trainb <- sample(1:nrow(airqua),0.80*nrow(airqua))
trainn <- airqua[trainb,]
testtt <- airqua[-trainb,]
q()
ss <- runif(nrow(iris
))
gen <- iris[order(ss
)]
gen <- iris[order(ss
),]
gen
ss
iris$Species <- NULL
ss <- runif(nrow(iris
))
ss
gen <- iris[order(ss
),]
gen
q()
install.packages("rpart")
install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
set.seed(9850)
s <- runif(nrow(iris))
genr <- iris[order(s),]
str(genr)
head(genr)
library(rpart)
detree <- rpart(Species ~ .,data = genr[1:100,],method = 'class')
detree
library(rpart.plot)
rpart.plot(detree,type = 4,fallen.leaves = T,extra = 104)
predestree <- predict(detree,genr[101:150,],type = 'class')
library(caret)
rpart.plot(detree,type = 4,fallen.leaves = T,extra = 104)
detree <- rpart(Species ~ .,data = genr[1:100,],method = 'class')
s <- runif(nrow(iris))
genr <- iris[order(s),]
str(genr)
head(genr)
library(rpart)
detree <- rpart(Species ~ .,data = genr[1:100,],method = 'class')
detree
View(iris)
View(iris3)
View(iris)
